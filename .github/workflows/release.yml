name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Update manifest version
        run: |
          VERSION=${{ steps.version.outputs.version }}
          # Update manifest.json with the new version
          jq --arg version "$VERSION" '.version = $version' custom_components/scene_extrapolation/manifest.json > temp.json
          mv temp.json custom_components/scene_extrapolation/manifest.json
          echo "Updated manifest.json to version $VERSION"

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}
          # Extract the changelog for this specific version
          awk "/^## \[$VERSION\]/,/^## \[/ {if (/^## \[/ && !/^## \[$VERSION\]/) exit; print}" CHANGELOG.md > release_notes.md
          # Remove the last line if it's the next version header
          sed -i '$ { /^## \[/d; }' release_notes.md
          echo "Extracted changelog for version $VERSION"

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "release_notes.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.tag }}
          name: "Scene Extrapolation ${{ steps.version.outputs.version }}"
          draft: false
          prerelease: false
